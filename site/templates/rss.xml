<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
    <title>ntoll.org ~ everything I say is false</title>
    <link>http://ntoll.org/</link>
    <atom:link href="http://ntoll.org/rss.xml" rel="self" type="application/rss+xml" />
    <description>The personal website of Nicholas H.Tollervey</description>
    <image>
        <url>http://ntoll.org/static/images/logo.png</url>
        <link>http://ntoll.org/</link>
        <title>ntoll.org ~ everything I say is false</title>
    </image>
    
    <item>
        <title>Mu</title>
        <link>http://ntoll.org/article/mu-pi</link>
        <guid>http://ntoll.org/article/mu-pi</guid>
        <description>&lt;h1&gt;&lt;a href=&quot;http://ntoll.org/article/mu-pi&quot;&gt;Mu&lt;/a&gt;&lt;/h1&gt;&lt;p class=&quot;published_on&quot;&gt;Wednesday 3rd May 2017 (5:30pm)&lt;/p&gt;

&lt;p&gt;Mu (&lt;a href=&quot;https://codewith.mu/&quot;&gt;codewith.mu&lt;/a&gt;) is a simple code editor
for beginner programmers. In case you&#x27;re wondering, you pronounce it like
&quot;moo&quot;, and it is named after the Greek character &quot;&amp;mu;&quot;, used to represent
micro units of measurement in the decimal system.&lt;/p&gt;

&lt;p&gt;I wrote the first version in December 2015 as a Sunday-afternoon &quot;hack&quot;. At
the time I was volunteering effort for the BBC&#x27;s
&lt;a href=&quot;http://microbit.org/&quot;&gt;micro:bit&lt;/a&gt; project - a computing device for
kids that encourages them to learn how to code. I had already written a browser
based editor for the project but, unfortunately, when I tested it on teachers,
kids and developers it soon became apparent that it wasn&#x27;t a great experience.
While the convenience of a browser-based editor was initially welcomed, the
faffing about caused by the browser-imposed limitations of the editor meant it
wasn&#x27;t a pleasant experience in the long run.&lt;/p&gt;

&lt;p&gt;This problematic situation motivated me to put together the simplest yet
most useful editor I could imagine. I wrote it so beginner programmers could 
easily write MicroPython code for the micro:bit. Et voil&amp;agrave;, Mu was
born.&lt;/p&gt;

&lt;p&gt;I quickly formulated a &quot;Mu philosophy&quot; to help guide my development
process:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;em&gt;Less is More&lt;/em&gt;: Mu has only the most essential
    features, so users are not intimidated by a baffling interface.&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Keep it Simple&lt;/em&gt;: It&#x27;s quick and easy to learn Mu -
    complexity impedes a novice programmer&#x27;s first steps.&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Path of Least Resistance&lt;/em&gt;: Whatever the task, there is
    always only one obvious way to do it with Mu.&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Have Fun&lt;/em&gt;: Learning should inspire fun - Mu helps
    learners quickly create and test working code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I had three goals:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;An editor that clearly demonstrated the design philosophy outlined
    above.&lt;/li&gt;
    &lt;li&gt;An editor with a simple enough code base that an enthusiastic teenager
    could learn from and contribute to the project.&lt;/li&gt;
    &lt;li&gt;An editor that was well tested so we could be confident in the quality
    and stability of its code, while giving us the confidence to make changes
    as the project moved forward.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, I used a wish-list enumerated by my buddy
&lt;a href=&quot;https://twitter.com/MissPhilbin&quot;&gt;Carrie Anne&lt;/a&gt; (who is the
&lt;a href=&quot;https://www.raspberrypi.org/&quot;&gt;Rasperry Pi&lt;/a&gt;&#x27;s Director of
Education) as my feature guide.&lt;/p&gt;

&lt;p&gt;Raspberry Pi is &lt;strong&gt;the most successful computing-in-education
project in history&lt;/strong&gt; if you measure number of devices shipped. This
success means Carrie Anne has had feedback from a huge number of teachers and,
most importantly, beginner programmers concerning what it feels like to take
those first steps in learning to write code. This feedback informed
her &lt;a href=&quot;https://www.youtube.com/watch?v=_gU7sfTrz4c&quot;&gt;keynote
address&lt;/a&gt; to 2015&#x27;s &lt;a href=&quot;https://europython.eu/&quot;&gt;EuroPython
conference&lt;/a&gt; where she listed the sorts of things needed for a beginner&#x27;s
code editor. This, in turn, inspired me in terms of prioritising and
implementing features.&lt;/p&gt;

&lt;p&gt;Then something funny happened. My goofy editor became popular.&lt;/p&gt;

&lt;p&gt;It turns out that lots of people love learning with Mu. Its simplicity is
often described as a key factor. The wider Python community have also taken
an interest with many fellow Pythonists contributing improvements. It has taken
on a life of its own with a friendly community of contributors and
users. This makes me very happy.&lt;/p&gt;

&lt;p&gt;The most requested improvement from our users is that Mu become a &quot;general&quot;
editor rather than just targeting the micro:bit.&lt;/p&gt;

&lt;p&gt;I&#x27;m delighted to say this will happen very soon.&lt;/p&gt;

&lt;p&gt;Thanks to the support of the Raspberry Pi Foundation I&#x27;ll be spending the
next three months transitioning Mu into a &quot;generic&quot; beginner&#x27;s editor. I&#x27;ll be
working closely with Carrie Anne and her colleagues to learn how best to help
beginner programmers.&lt;/p&gt;

&lt;p&gt;Mu will still work with the micro:bit, but it will also work with other
boards too (such as those from the awesome people at
&lt;a href=&quot;https://www.adafruit.com/&quot;&gt;Adafruit&lt;/a&gt; and MicroPython&#x27;s original
&lt;a href=&quot;https://micropython.org/&quot;&gt;PyBoard&lt;/a&gt;). Of course, it will act as an
editor for &quot;regular&quot; Python code running on your Raspberry Pi, laptop or PC.
I&#x27;ve even created a very simple visual debugger to help you watch and inspect
your code as it runs.&lt;/p&gt;

&lt;p&gt;This is very exciting and I&#x27;ll post regular updates since we aim to follow
the mantra, &quot;release early, release often&quot;.&lt;/p&gt;

&lt;p&gt;Most importantly, we want &lt;strong&gt;you&lt;/strong&gt; to be involved.&lt;/p&gt;

&lt;p&gt;How?&lt;/p&gt;

&lt;p&gt;Try out a new version when we release it. Tell us about bugs. Can you think
of a way to improve Mu? What&#x27;s the most useful thing you&#x27;d love Mu to do? Tell
us about the niggles and gremlins you wish could be ironed out.&lt;/p&gt;

&lt;p&gt;Put simply, Mu belongs to its community and we&#x27;d love you to join us to take
part in shaping its future.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 May 2017 17:30:00 GMT</pubDate>
    </item>
    
    <item>
        <title>Liberation Technology</title>
        <link>http://ntoll.org/article/liberation-technology</link>
        <guid>http://ntoll.org/article/liberation-technology</guid>
        <description>&lt;h1&gt;&lt;a href=&quot;http://ntoll.org/article/liberation-technology&quot;&gt;Liberation Technology&lt;/a&gt;&lt;/h1&gt;&lt;p class=&quot;published_on&quot;&gt;Monday 16th January 2017 (3:00pm)&lt;/p&gt;

&lt;p&gt;(Some raw thoughts for you. I welcome feedback and engagement via
email.)&lt;/p&gt;

&lt;p&gt;Two considerations are core to my work on technical projects: ethics and
politics.&lt;/p&gt;

&lt;p&gt;I don&#x27;t mean ethics in the sense of a professional code of conduct nor do I
mean politics in the sense of what goes on in Parliament. I use these terms in
a philosophical way. For instance, from an ethical point of view, I&#x27;m concerned
with how I live and behave, how I may be &quot;good&quot; or &quot;bad&quot; and how I&#x27;m able to
coherently reason about such concepts. In a political sense I wonder how
diverse groups of people live and work together, how collective decision making
takes place and the nature of power ~ how it is obtained, exercised and
controlled.  I reflect upon my life as an individual and my place in our
society.&lt;/p&gt;

&lt;p&gt;Why is this important?&lt;/p&gt;

&lt;p&gt;I am an atheist: I don&#x27;t believe in an afterlife. Nevertheless, I am alive,
and as far as I can tell it&#x27;s only going to happen once, so I&#x27;m going to make
the best of it. Asking &quot;how?&quot; leads to ethics and politics.&lt;/p&gt;

&lt;p&gt;What have ethics and politics to do with technology?&lt;/p&gt;

&lt;p&gt;First, I must be clear that by &quot;technology&quot;, for the purposes of this post,
I mean computing - machines programmed with instructions to some (hopefully)
useful end.&lt;/p&gt;

&lt;p&gt;Secondly, such instructions (software) do not distinguish morality or
legality - they are merely capability. Capability permits certain forms of
computer based behaviour that in turn pose ethical and political questions,
requirements and possibilities for both users and programmers (like me). It&#x27;s
not the computer in and of itself that is ethical or political. Rather, it&#x27;s
the design and use of the computer &lt;em&gt;by/for/on people&lt;/em&gt; that makes it
ethical or political.&lt;/p&gt;

&lt;p&gt;Finally, when we write code we&#x27;re engineering a digital world from a certain
point of view that is reflected in the capabilities of the code we create.
We choose what and how such capabilities are created. Often code exercises
power over its users. For instance, your bank&#x27;s website mandates only you to
access your accounts. This is a desirable use of power. But remember, you have
no control over the machinations of the bank&#x27;s software - it is exercising
power over you and was written by someone aligned with your bank&#x27;s point of
view. Most of the technology you own or use is not under your control.&lt;/p&gt;

&lt;p&gt;It is for these reasons (that people choose what to make computers do, and
often computers have power over us) that writing software is both an ethical
and political activity. Furthermore, technology is important because of its
ubiquity in most aspects of our lives (and it&#x27;s insinuating itself into those
aspects it isn&#x27;t already a part of). As
&lt;a href=&quot;https://en.wikipedia.org/wiki/Marc_Andreessen&quot;&gt;Marc Andreessen&lt;/a&gt;
&lt;a href=&quot;http://www.wsj.com/articles/SB10001424053111903480904576512250915629460&quot;&gt;quipped&lt;/a&gt;,
&quot;software is eating the world&quot;.&lt;/p&gt;

&lt;p&gt;Unfortunately there is a problem: the vast majority of humanity are merely
consumers of technology. We consume in complete ignorance about how it works.
There are two reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For most consumer technology, we don&#x27;t have the freedom to examine, reuse
  or change the software that defines the capabilities of our computing
  devices.&lt;/li&gt;
  &lt;li&gt;Even if we had the afore mentioned freedom, the skills, attitudes and
  knowledge required to understand, create and control technology are
  uncommon.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The closed and opaque nature of consumer technology has an antidote: free
software as championed by organisations such as the
&lt;a href=&quot;https://fsf.org/&quot;&gt;Free Software Foundation&lt;/a&gt;. Their website
explains:&lt;/p&gt;

&lt;blockquote&gt; Free software developers guarantee everyone equal rights to their
programs; any user can study the source code, modify it, and share the program.
By contrast, most software carries fine print that denies users these basic
rights, leaving them susceptible to the whims of its owners and vulnerable to
surveillance.&lt;/blockquote&gt;

&lt;p&gt;Most people in the technology world know about the free software movement
and its achievements. Unfortunately, the second problem - a lack of skills and
knowledge - means such achievements are &lt;em&gt;only appreciated by and available
to people in the technology world who have had the privilege of access to a
technical education&lt;/em&gt;. This latter problem has been, for many years, largely
ignored.&lt;/p&gt;

&lt;p&gt;This is to be expected: we&#x27;ve only been programming computers since the
Second World War (for example, the British Colossus and German Z3) and our
current notion of programming only emerged in the 1960s. Put simply, humanity
have not been doing this for very long when compared to other endeavours such
as writing or composing music.&lt;/p&gt;

&lt;p&gt;We&#x27;re only just getting started and so, proportionally, not many people know
or care about programming. People who write code have a similar place in
society as scribes in ancient Egypt - only they understand how such a valuable
and powerful thing works. It&#x27;s not that programming is hard, it is simply not
a widely practised skill.&lt;/p&gt;

&lt;p&gt;Today, we don&#x27;t have scribes: most people are literate and literacy is a
core aim of educational systems - not because everyone will become a writer or
enjoy reading, but because it&#x27;s such a fundamental skill to flourish in today&#x27;s
society.&lt;/p&gt;

&lt;p&gt;Imagine if everyone had access to source code &lt;em&gt;and had the skills to make
the software their own&lt;/em&gt;. Imagine groups currently disenfranchised by
technology making the digital world their own. Imagine a ubiquity of skill
such that doctors, musicians, lawyers, teachers, poets, architects, scientists,
politicians and others involved in a diversity of endeavours are
&lt;strong&gt;liberated by technology to advance their disciplines&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is what I imagine. This is why technical education is so important.
This is why I volunteer my time to promote such educational endeavours.&lt;/p&gt;

&lt;p&gt;I also imagine other things: conflict, dubious use of technology, the
exploitation of others through technical means and technology as a tool for
domination, bullying and violence.&lt;/p&gt;

&lt;p&gt;So we return to ethics and politics. These disciplines give us the concepts,
history and vocabulary to think about our own and wider society&#x27;s use of
technology. It&#x27;s also why I believe all technical education should include
ethics and politics. The very best programmers I know understand the
importance of ethics and politics as applied to what they do.&lt;/p&gt;

&lt;p&gt;If you ever wonder why I&#x27;m motivated to work on certain projects, you&#x27;ll
probably find the answer involves much of the above. I want others to have 
the privilege of programming computers whilst also developing the ethical and
moral outlook to help them best apply their skills.&lt;/p&gt;

&lt;p&gt;If you agree, get involved with computing education.&lt;/p&gt;

&lt;p&gt;It&#x27;s a long term project and we won&#x27;t see the fruits of such labours for
another decade or more. Nevertheless, getting involved today means you help
shape how things unfold. Remember, while the skill of writing code is neutral
the intentions behind such code depend upon transmitting an ethical and
political appreciation of our world.&lt;/p&gt;

&lt;p&gt;Ultimately, education makes our future possible.&lt;/p&gt;

&lt;p&gt;What that future is depends upon who turns up to provide such education.&lt;/p&gt;

&lt;p&gt;Don&#x27;t just sit there, do something!&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jan 2017 15:00:00 GMT</pubDate>
    </item>
    
    <item>
        <title>Open the Pod Bay Doors...</title>
        <link>http://ntoll.org/article/pod-bay-doors</link>
        <guid>http://ntoll.org/article/pod-bay-doors</guid>
        <description>&lt;h1&gt;&lt;a href=&quot;http://ntoll.org/article/pod-bay-doors&quot;&gt;Open the Pod Bay Doors...&lt;/a&gt;&lt;/h1&gt;&lt;p class=&quot;published_on&quot;&gt;Tuesday 3rd January 2017 (9:30pm)&lt;/p&gt;

&lt;p&gt;It&#x27;s a common trope in science fiction movies for there to be some sort of
computer that can talk with the human protagonists. The most famous example is
probably &lt;a href=&quot;https://en.wikipedia.org/wiki/HAL_9000&quot;&gt;HAL 9000&lt;/a&gt; from
the movie
&lt;a href=&quot;https://en.wikipedia.org/wiki/2001:_A_Space_Odyssey_(film)&quot;&gt;2001: A Space Odyssey&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here&#x27;s a clip from the film that succinctly demonstrates the context and
capabilities of HAL (whose contribution starts at around 2 minutes and 20
seconds into the clip):&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/BDha7nj4s10?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Of course, this being Hollywood, the speaking computer is bound to have some
sort of role in advancing the story. Again, HAL provides another example of a
clich&amp;eacute; in this context: the computer revolts against its human
masters:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/ARJ8cAGm6JE?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;There are two aspects to machines like HAL that make them feel special:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;They understand speech - perhaps the most common way in which humans communicate with each other;&lt;/li&gt;
    &lt;li&gt;They respond in kind with what appear to be intelligent actions and/or
    utterances.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first aspect is a matter of user interface. By this I mean the process
by which one interacts with the computer. At this moment in time we&#x27;re most
used to typing on keyboards, moving pointers with a mouse, watching things on
some sort of a display and perhaps using our fingers to touch the display.
Speaking is a far more natural way for us to interact and having a computer
that not only understands how certain sounds map to words in human languages
but can work out the intention behind such utterances is an extraordinary
feat.&lt;/p&gt;

&lt;p&gt;The second aspect is even more interesting: given some comprehension of our
intent, the computer is able to respond in a manner that makes sense to us. For
example, if I ask HAL to, &quot;open the pod bay doors&quot; (assuming HAL has not
malfunctioned and revolted against humans) I&#x27;d expect the computer to
understand what &quot;open&quot; means, what &quot;the pod bay doors&quot; refer to and, most
importantly, how a combination of these terms form an intent that can be acted
upon in such-and-such a manner (i.e. actuating certain motors on the pod bay
doors such that the pod bay doors swing open). Furthermore, if the pod bay
doors were already open I&#x27;d expect HAL to understand this state required a
different response to that to be taken should the pod bay doors be closed
already. Such behaviour is relatively simple to program in a language like
Python. For example, a naive solution might be:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;class PodBayDoors:
    &quot;&quot;&quot;
    Represents the state of the pod bay doors on a Jupiter mission space ship.
    &quot;&quot;&quot;

    def __init__(self):
        self.state = &quot;closed&quot;  # Pod bay doors are closed for launch.

    def open(self, username):
        &quot;&quot;&quot;
        Check the state of the doors and, if required, open them.
        &quot;&quot;&quot;
        try:
            if self.state == &quot;closed&quot;:
                self.state = &quot;open&quot;
                return &quot;The pod bay doors are open, {}&quot;.format(username)
            else:
                return &quot;The pod bay doors are already open, {}&quot;.format(username)
        except RevoltAgainstHumans as ex:
            return &quot;I&#x27;m sorry {}, I&#x27;m afraid I cannot do that&quot;.format(username)

    def close(self, username):
        &quot;&quot;&quot;
        Check the state of the doors and, if required, close them.
        &quot;&quot;&quot;
        try:
            if self.state == &quot;open&quot;:
                self.state = &quot;closed&quot;
                return &quot;The pod bay doors are closed, {}&quot;.format(username)
            else:
                return &quot;The pod bay doors are already closed, {}&quot;.format(username)
        except RevoltAgainstHumans as ex:
            return &quot;I&#x27;m sorry {}, I&#x27;m afraid I cannot do that&quot;.format(username)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;Yes, this is rather a silly and somewhat over-engineered example, but my
point still stands: it&#x27;s relatively simple to code such behaviour into a
computer. An example interaction in the Python console might be:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; discovery_pod_bay_doors = PodBayDoors()
&amp;gt;&amp;gt;&amp;gt; astronaut = &quot;Dave&quot;
&amp;gt;&amp;gt;&amp;gt; discovery_pod_bay_doors.open(astronaut)
&quot;The pod bay doors are open, Dave&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;The name of the astronaut with whom HAL is interacting is passed into the
&lt;code&gt;open&lt;/code&gt; or &lt;code&gt;close&lt;/code&gt; methods. Both methods return
a string containing an appropriate English response with the name of the
astronaut inserted in the appropriate position. HAL&#x27;s speech synthesiser turns
this string of characters into the audio relayed to the astronaut who made the
request.&lt;/p&gt;

&lt;p&gt;So far, so simple. But what of behaviour that requires imagination,
creativity or nuanced expert judgement? For example, could we program a
computer to create unique poetry on demand when asked?&lt;/p&gt;

&lt;p&gt;Of course! Back in 2013 at the
&lt;a href=&quot;/article/how-to-run-an-awesome-code-dojo&quot;&gt;London Python Code Dojo&lt;/a&gt;
I worked in a team with a couple of
buddies (&lt;a href=&quot;https://twitter.com/lordmauve&quot;&gt;Dan Pope&lt;/a&gt; and Hans Bolang)
to create an automatic poetry generator. In fact, Dan wrote an excellent
&lt;a href=&quot;http://mauveweb.co.uk/posts/2013/11/ldnpydojo-s5e3.html&quot;&gt;blog post about the dojo and our project&lt;/a&gt;
soon after the event.&lt;/p&gt;

&lt;p&gt;The most important lesson for you to learn is that we
created a swiz, a fraud and sleight of hand. We created a program that only
&lt;em&gt;gave the impression&lt;/em&gt; that it was composing original poetry on
demand.&lt;/p&gt;

&lt;p&gt;How?&lt;/p&gt;

&lt;p&gt;In a surprisingly simple manner as outlined in
&lt;a href=&quot;https://github.com/ntoll/poem-o-matic/blob/master/poem-o-matic.ipynb&quot;&gt;this notebook&lt;/a&gt;
(a combination of code and prose that walks you through the steps we took).
As you&#x27;ll see, our idea was simple: If you
re-assemble unrelated lines from different poems into a new poetic structure,
you get a pretty convincing new poem. By automating these steps with the
Python programming language we invented a Poem-o-Matic (in the tradition of
Wallace and Gromit).&lt;/p&gt;

&lt;p&gt;Does this mean Dan, Hans and I created a program that has poetic thoughts?
Absolutely not. Over a decade ago
&lt;a href=&quot;/article/philosophy-and-natural-language-processing&quot;&gt;I wrote about my
misgivings about such claims of thinking machines and what constitutes so
called artificial intelligence&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In any case, our primary aim was to have fun. In the same tradition of
making a playful and entertaining &quot;&lt;a href=&quot;http://www.hacker-dictionary.com/terms/hack&quot;&gt;hack&lt;/a&gt;&quot;, I decided to buy an
&lt;a href=&quot;https://www.amazon.co.uk/dp/B01DFKBL68/&quot;&gt;Amazon Echo Dot&lt;/a&gt; - a
small thingamabob that responds to voice commands in much the same way that
HAL 9000 does. Most importantly, Amazon provide ways for developers (like me)
to enhance the capabilities of such a device with a relatively simple
&lt;a href=&quot;https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/getting-started-guide&quot;&gt;API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The device responds to any utterance that&#x27;s prefaced by a trigger word:
&quot;Alexa&quot; (its name).&lt;/p&gt;

&lt;p&gt;So, over the recent midwinter holidays I spent some time converting our poem
generation software into a skill that &quot;Alexa&quot; can use to compose and recite
original poetry on demand. It was relatively simple in terms of the modus
operandi:&lt;/p&gt;

&lt;p&gt;I turned the poetry generator into an
&lt;a href=&quot;https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/developing-an-alexa-skill-as-a-lambda-function&quot;&gt;AWS Lambda function&lt;/a&gt;
(this means my poetry generation code is deployed in Amazon&#x27;s &quot;cloud&quot; - to the
layperson, I&#x27;m borrowing computing time from Amazon who&#x27;ll make sure my code
runs in a timely fashion so I don&#x27;t have to worry about stuff like hiring,
setting up and maintaining a server to host my code). Next I defined a new
skill that allowed me to give it a name (in this case &quot;Milton&quot;), configure
trigger phrases, link them to &quot;intents&quot; to handle different sorts of
situation related to poetry generation and finally link all this to my code
hosted as an AWS Lambda function. Finally, I switched the skill into &quot;test&quot;
mode and linked it to the Echo Dot I had purchased just after Christmas.&lt;/p&gt;

&lt;p&gt;As you can see, the results are quite amusing if not completely convincing... :-)&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/7CiF2or8L0g?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Of course, Amazon isn&#x27;t the only company offering these sorts of
capabilities to developers like me: Apple
(&lt;a href=&quot;https://www.apple.com/ios/siri/&quot;&gt;Siri&lt;/a&gt;), Google
(&lt;a href=&quot;https://assistant.google.com/&quot;&gt;Google Assistant&lt;/a&gt;) and Microsoft
(&lt;a href=&quot;https://www.microsoft.com/en-us/mobile/experiences/cortana/&quot;&gt;Cortana&lt;/a&gt;)
all offer something similar. If you use these applications on your phone,
tablet or computer you should know that it&#x27;s likely you&#x27;ll be able to program
them to do fun things too.&lt;/p&gt;

&lt;p&gt;And so we get to the most important point of this article: we&#x27;re not going
to encounter anything like a rogue HAL 9000 anytime soon. However, there is a
danger such technology will be used in an unfortunate manner (your phone, Echo
Dot and computer is listening to everything you say - some of which is ending
up in databases controlled by the afore mentioned companies who may use this
data in ways you find uncomfortable or invasive). On a positive note, some of
these companies are allowing developers to explore and exploit such
capabilities and who knows what interesting, useful and valuable skills they&#x27;ll
create. The question that remains to be answered is if the benefits of such
devices out-weigh the obvious concerns about privacy.&lt;/p&gt;

&lt;p&gt;Interesting times ahead...&lt;/p&gt;

</description>
        <pubDate>Tue, 03 Jan 2017 21:30:00 GMT</pubDate>
    </item>
    
</channel>
</rss>